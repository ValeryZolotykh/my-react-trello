import {combineReducers, createStore} from 'redux';
// import rootReducer from '../reducers/reducers'; //Редюсер в Redux отвечает за обновление состояния в ответ на действия (actions).
import rootReducer from "../reducers/rootReducer";
/** Здесь создается Redux store с использованием функции createStore. Эта функция принимает ваш корневой редюсер
    как аргумент, чтобы определить, как обрабатывать действия и обновлять состояние.*/

const store = createStore(rootReducer);

export default store;

/** Redux Store - это централизованное место, где хранится состояние вашего приложения.
 *  Весь стейт приложения хранится в одном объекте, что упрощает управление состоянием и его обновление.
 *
 *  В Redux мы используем специальное место, называемое "хранилищем" (store), чтобы хранить все данные нашего
 *  приложения.
 *
 *  Файл store.js отвечает за создание этого хранилища и настройку его работы.
 *  В этом файле мы говорим Redux: "Эй, создай новое хранилище для моего приложения
 *  с этими правилами для обновления данных".
 *
 *  В этом файле мы используем функцию createStore из Redux. Мы передаем ей особый "редюсер" (rootReducer),
 *  который определяет, как данные в хранилище будут изменяться в ответ на действия.
 *
 *  Когда что-то происходит в приложении (например, пользователь кликает на кнопку), мы отправляем "действие" в хранилище.
 *  Хранилище передает это действие корневому редюсеру, который обновляет данные в соответствии с этим действием.
 *
 *  Файл store.js экспортирует созданное хранилище, чтобы другие части приложения могли его использовать.
 *  Например, когда мы хотим узнать текущее состояние приложения или отправить новое действие, мы импортируем
 *  это хранилище и используем его.
 */